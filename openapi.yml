openapi: 3.0.0
info:
  title: Palomma API
  version: 1.0.0
servers:
  - url: https://prod.api.palomma.com/v1
    description: Production server
  - url: https://sandbox.api.palomma.com/v1
    description: Sandbox server

paths:
  /merchantAccounts:
    get:
      summary: List Merchant Accounts
      description: Returns a list of all Merchant Account objects corresponding to the merchant.
      operationId: listMerchantAccounts
      tags:
        - Merchant Accounts
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of merchant accounts.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MerchantAccount"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /merchantAccounts/{merchantAccountId}:
    get:
      summary: Retrieve a Merchant Account
      description: Retrieves a Merchant Account using the ID specified.
      operationId: getMerchantAccountById
      tags:
        - Merchant Accounts
      security:
        - bearerAuth: []
      parameters:
        - name: merchantAccountId
          in: path
          required: true
          description: Unique identifier of the merchant account.
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Merchant Account retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantAccount"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Merchant Account not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /customers:
    post:
      summary: Creates a new Customer
      description: Creates a new Customer from the information sent in the body.
      operationId: createCustomer
      tags:
        - Customers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Full name of the customer.
                documentType:
                  type: string
                  enum: ["cc", "ce", "nit"]
                  description: Type of identification document (cc, ce, nit).
                documentNumber:
                  type: string
                  description: Identification document number.
                email:
                  type: string
                  description: Email address of the customer.
              required:
                - name
                - documentType
                - documentNumber
                - email
      responses:
        "201":
          description: Customer created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: List Customers
      description: Returns a list of all Customer objects corresponding to the merchant.
      operationId: listCustomers
      tags:
        - Customers
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of customers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Customer"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /customers/{customerId}:
    get:
      summary: Retrieve a Customer
      description: Retrieves a Customer using the ID specified.
      operationId: getCustomerById
      tags:
        - Customers
      security:
        - bearerAuth: []
      parameters:
        - name: customerId
          in: path
          required: true
          description: Unique identifier of the customer.
          schema:
            type: string
      responses:
        "200":
          description: Customer retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Customer not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /paymentLinks:
    post:
      summary: Create Payment Link
      description: Creates a new Payment Link from the information sent in the body.
      operationId: createPaymentLink
      tags:
        - Payment Links
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: string
                  description: Unique identifier of the customer.
                paymentType:
                  type: string
                  enum: ["pse"]
                  description: Type of the payment.
                redirectUrl:
                  type: string
                  description: URL to redirect the user after payment is processed.
              required:
                - customerId
                - paymentType
                - redirectUrl
      responses:
        "201":
          description: Payment Link created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentLink"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: List Payment Links
      description: Returns a list of all Payment Link objects corresponding to the merchant.
      operationId: listPaymentLinks
      tags:
        - Payment Links
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of payment links.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PaymentLink"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /paymentLinks/{paymentLinkId}:
    get:
      summary: Retrieve a Payment Link
      description: Retrieves a Payment Link using the ID specified.
      operationId: getPaymentLinkById
      tags:
        - Payment Links
      security:
        - bearerAuth: []
      parameters:
        - name: paymentLinkId
          in: path
          required: true
          description: Unique identifier of the payment link.
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Payment Link retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentLink"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payment Link not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /paymentMethods:
    post:
      summary: Create Payment Method
      description: Creates a new Payment Method from the information sent in the body.
      operationId: createPaymentMethod
      tags:
        - Payment Methods
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              oneOf:
                - properties:
                    customerId:
                      type: string
                      description: Unique identifier of the customer.
                    type:
                      type: string
                      enum: ["bankAccount"]
                    bank:
                      $ref: "#/components/schemas/Bank"
                    accountType:
                      type: string
                      enum: ["savings", "checking"]
                      description: Type of bank account (savings or checking).
                    accountNumber:
                      type: string
                      description: Bank account number.
                  required:
                    - customerId
                    - type
                    - bank
                    - accountType
                    - accountNumber
                - properties:
                    customerId:
                      type: string
                    type:
                      type: string
                      enum: ["bancolombiaInstant"]
                    redirectUrl:
                      type: string
                      description: URL for redirection.
                  required:
                    - customerId
                    - type
                    - redirectUrl
                - properties:
                    customerId:
                      type: string
                    type:
                      type: string
                      enum: ["nequiInstant"]
                    phoneNumber:
                      type: string
                      description: Phone number for Nequi account.
                  required:
                    - customerId
                    - type
                    - phoneNumber
      responses:
        "201":
          description: Payment Method created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: List Payment Methods
      description: Returns a list of all Payment Method objects corresponding to the merchant.
      operationId: listPaymentMethods
      tags:
        - Payment Methods
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of payment methods.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PaymentMethod"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /paymentMethods/{paymentMethodId}:
    get:
      summary: Retrieve a Payment Method
      description: Retrieves a Payment Method using the ID specified.
      operationId: getPaymentMethodById
      tags:
        - Payment Methods
      security:
        - bearerAuth: []
      parameters:
        - name: paymentMethodId
          in: path
          required: true
          description: Unique identifier of the payment method.
          schema:
            type: string
      responses:
        "200":
          description: Payment Method retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payment Method not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /paymentRequests:
    post:
      summary: Create Payment Request
      description: Creates a new Payment Request from the information sent in the body.
      operationId: createPaymentRequest
      tags:
        - Payment Requests
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethodId:
                  type: string
                  description: Unique identifier of the payment method.
                amount:
                  type: number
                  description: Amount to be charged.
              required:
                - paymentMethodId
                - amount
      responses:
        "201":
          description: Payment Request created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentRequest"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: List Payment Requests
      description: Returns a list of all Payment Request objects corresponding to the merchant.
      operationId: listPaymentRequests
      tags:
        - Payment Requests
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of payment requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PaymentRequest"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /paymentRequests/{paymentRequestId}:
    get:
      summary: Retrieve a Payment Request
      description: Retrieves a Payment Request using the ID specified.
      operationId: getPaymentRequestById
      tags:
        - Payment Requests
      security:
        - bearerAuth: []
      parameters:
        - name: paymentRequestId
          in: path
          required: true
          description: Unique identifier of the payment request.
          schema:
            type: string
      responses:
        "200":
          description: Payment Request retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentRequest"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payment Request not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payoutTargets:
    post:
      summary: Create Payout Target
      description: Creates a new Payout Target from the information sent in the body.
      operationId: createPayoutTarget
      tags:
        - Payout Targets
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: string
                  description: Unique identifier of the customer.
                type:
                  type: string
                  enum: ["bankAccount"]
                  description: Type of the payout target.
                bank:
                  $ref: "#/components/schemas/Bank"
                accountType:
                  type: string
                  enum: ["savings", "checking"]
                  description: Type of bank account.
                accountNumber:
                  type: string
                  description: Bank account number.
              required:
                - customerId
                - type
                - bank
                - accountType
                - accountNumber
      responses:
        "200":
          description: Payout Target created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutTarget"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: List Payout Targets
      description: Returns a list of all Payout Target objects corresponding to the merchant.
      operationId: listPayoutTargets
      tags:
        - Payout Targets
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of payout targets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PayoutTarget"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /payoutTargets/{payoutTargetId}:
    get:
      summary: Retrieve a Payout Target
      description: Retrieves a Payout Target using the ID specified.
      operationId: getPayoutTargetById
      tags:
        - Payout Targets
      security:
        - bearerAuth: []
      parameters:
        - name: payoutTargetId
          in: path
          required: true
          description: Unique identifier of the payout target.
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Payout Target retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutTarget"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Payout Target not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for this customer.
          example: "e79a0b74-3aba-4149-9f74-0bb5791a6ee6"
        name:
          type: string
          description: First and last name for a natural person, and company name for a juridical person.
          example: "Pepito Perez"
        documentType:
          type: string
          enum: ["cc", "ce", "nit"]
          description: Colombian ID type for customer.
          example: "cc"
        documentNumber:
          type: string
          description: Colombian ID number for customer.
          example: "200220422"
        email:
          type: string
          description: Customer’s email.
          example: "pepito@perez.com"
        createdAt:
          type: string
          format: date-time
          description: ISO string when the customer was created.
          example: "2023-10-26T21:28:34.152Z"
        updatedAt:
          type: string
          format: date-time
          description: ISO string when the customer was updated.
          example: "2023-10-26T21:28:34.152Z"
    PaymentMethod:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for this payment method.
          example: "67d7ae28-bf1d-4ee9-8a47-99358c9e6c32"
        status:
          type: string
          enum: ["pending", "active", "error"]
          description: >
            Status of the payment method. 'pending' indicates the payment method is not yet available for payment requests. 
            'active' indicates the payment method is available for payment requests. 
            'error' indicates an error confirming the bank account, usually when bank info is incorrect or customer info doesn’t match with the bank account owner’s.
          example: "active"
        customerId:
          type: string
          description: Reference to the customer who owns this payment method.
          example: "e79a0b74-3aba-4149-9f74-0bb5791a6ee6"
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        type:
          type: string
          enum: ["bankAccount", "bancolombiaInstant", "nequiInstant"]
          description: >
            Type of payment method created. Can be "bankAccount" for an account that transacts through traditional slower banking rails, 
            "bancolombiaInstant", or "nequiInstant" for tokenized instant payment accounts.
          example: "bankAccount"
        bankAccount:
          $ref: "#/components/schemas/BankAccount"
        bancolombiaInstant:
          $ref: "#/components/schemas/BancolombiaInstant"
        nequiInstant:
          $ref: "#/components/schemas/NequiInstant"
        createdAt:
          type: string
          format: date-time
          description: ISO string when the payment method was created.
          example: "2023-10-26T21:28:34.152Z"
        updatedAt:
          type: string
          format: date-time
          description: ISO string when the payment method was last updated.
          example: "2023-10-26T21:28:34.152Z"
    BancolombiaInstant:
      type: object
      properties:
        authUrl:
          type: string
          description: Link for authorization. Only available while payment method status is "pending".
          example: "https://www.bancolombia.com/..."
        affiliate:
          $ref: "#/components/schemas/Affiliate"
    Affiliate:
      type: object
      properties:
        name:
          type: string
          description: Name of the linked Bancolombia account owner.
          example: "Pepito Perez"
        documentType:
          type: string
          description: Document type for linked Bancolombia account owner.
          example: "cc"
        documentNumber:
          type: string
          description: Document number for linked Bancolombia account owner.
          example: "200220422"
        accountType:
          type: string
          description: Account type for linked Bancolombia account.
          example: "savings"
        accountNumber:
          type: string
          description: Last four digits of account number for linked Bancolombia account.
          example: "*1234"
    NequiInstant:
      type: object
      properties:
        phoneNumber:
          type: string
          description: Account number for linked Nequi Account.
          example: "3298779391"
    BankAccount:
      type: object
      properties:
        bank:
          $ref: "#/components/schemas/Bank"
        accountType:
          type: string
          enum: ["savings", "checking"]
          description: Account type for payment method.
          example: "savings"
        accountNumber:
          type: string
          description: Account number for payment method.
          example: "123456789"
    CustomerDetails:
      type: object
      properties:
        name:
          type: string
          description: First and last name for a natural person, and company name for a juridical person.
          example: "Pepito Perez"
        documentType:
          type: string
          enum: ["cc", "ce", "nit"]
          description: Colombian ID type for customer.
          example: "cc"
        documentNumber:
          type: string
          description: Colombian ID number for customer.
          example: "200220422"
        email:
          type: string
          description: Customer’s email.
          example: "pepito@perez.com"
    Bank:
      type: string
      enum:
        - santander
        - coofinep
        - avvillas
        - cotrafa
        - confiar
        - union
        - nequi
        - bancoagrario
        - bancoomeva
        - bancamia
        - coopcentral
        - citibank
        - bancodeoccidente
        - falabella
        - bancodebogota
        - bancocajasocial
        - serfinanza
        - cfa
        - coltefinanciera
        - pichincha
        - iris
        - ban100
        - bancopopular
        - daviplata
        - bancolombia
        - finandina
        - scotiabankcolpatria
        - gnbsudameris
        - itau
        - bbva
        - davivienda
        - mibanco
        - multibank
        - mundomujer
        - procreditcolombia
        - bancow
        - bancoldex
        - juriscoop
        - itauhelm
        - jpmorgancolombia
      description: Enum of all available banks for direct debit through the Palomma API.
    PaymentRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for this payment request.
          example: "0697129c-26e2-42f1-a000-dc60878d5588"
        status:
          type: string
          enum: ["pending", "processing", "approved", "error"]
          description: Current status of the payment request.
          example: "approved"
        customerId:
          type: string
          description: Reference to the customer who owns the payment method from which the payment request was created.
          example: "e79a0b74-3aba-4149-9f74-0bb5791a6ee6"
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        paymentMethodId:
          type: string
          description: Reference to the payment method from which the payment request was created.
          example: "67d7ae28-bf1d-4ee9-8a47-99358c9e6c32"
        paymentMethodDetails:
          $ref: "#/components/schemas/PaymentMethodDetails"
        currency:
          type: string
          description: Always "cop" (Colombian Pesos).
          example: "cop"
        amount:
          type: number
          description: Amount to collect from the customer's payment method, with no more than two decimal places.
          example: 10000
        createdAt:
          type: string
          format: date-time
          description: ISO string when the payment request was created.
          example: “2023-10-26T21:28:34.152Z”
        updatedAt:
          type: string
          format: date-time
          description: ISO string when the payment request was last updated.
          example: “2023-10-26T21:28:34.152Z”
        approvedDetails:
          $ref: "#/components/schemas/ApprovedPaymentRequest"
        errorDetails:
          $ref: "#/components/schemas/ErroredPaymentRequest"
    ApprovedPaymentRequest:
      type: object
      properties:
        approvedAt:
          type: string
          format: date-time
          description: ISO string when the payment request was approved.
          example: "2023-10-26T21:28:34.152Z"
        paidAt:
          type: string
          format: date-time
          description: ISO string when the payment request was paid out to the merchant, or null for unpaid transactions.
          example: "2023-10-26T21:28:34.152Z"
    ErroredPaymentRequest:
      type: object
      properties:
        errorCode:
          type: string
          description: Error code returned by financial institution that processed the transaction.
          example: "D23"
        errorMessage:
          type: string
          description: Description of the error in the transaction from the processing financial institution.
          example: "Not enough funds"
        errorAt:
          type: string
          format: date-time
          description: ISO string when the payment request resolved to an error.
          example: “2023-10-26T21:28:34.152Z”
    PaymentMethodDetails:
      type: object
      properties:
        type:
          type: string
          description: Type of payment method created. Can be "bankAccount" for an account that transacts through traditional slower banking rails, or "bancolombiaInstant", "nequiInstant" for tokenized instant payment accounts.
          example: "bankAccount"
          enum:
            - bankAccount
            - bancolombiaInstant
            - nequiInstant
        bankAccount:
          $ref: "#/components/schemas/BankAccount"
        bancolombiaInstant:
          type: object
          nullable: true
          description: Information about the Bancolombia account associated to this payment method. Only present when payment method type is "bancolombiaInstant".
          properties:
            affiliate:
              $ref: "#/components/schemas/Affiliate"
        nequiInstant:
          type: object
          nullable: true
          description: Information about the Nequi account associated to this payment method. Only present when payment method type is "nequiInstant".
          properties:
            phoneNumber:
              type: string
              example: "3298779391"
    MerchantAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for this merchant account.
          example: "e79a0b74-3aba-4149-9f74-0bb5791a6ee6"
        description:
          type: string
          description: Description of merchant account visible to the merchant.
          example: "Bancolombia Cuenta Operativa"
        name:
          type: string
          description: Name of the merchant account holder.
          example: "Palomma SAS"
        documentType:
          type: string
          enum: ["cc", "ce", "nit"]
          description: Colombian ID type of the merchant account holder.
          example: "nit"
        documentNumber:
          type: string
          description: Colombian ID number of the merchant account holder.
          example: "901653730"
        bank:
          $ref: "#/components/schemas/Bank"
          description: Merchant account bank.
          example: "bancolombia"
        accountType:
          type: string
          enum: ["checking", "savings"]
          description: Merchant account type.
          example: "savings"
        accountNumber:
          type: string
          description: Last four digits of merchant account number.
          example: "1234"
        payoutsEnabled:
          type: boolean
          description: True if the merchant account is enabled for payouts from the account. Defaults to false.
          example: false
        paymentsSettlementAccount:
          type: boolean
          description: True only for a single account where money from customer payments gets paid to during transactions settlement.
          example: true
        createdAt:
          type: string
          format: date-time
          description: ISO string when the merchant account was created.
          example: "2023-10-26T21:28:34.152Z"
        updatedAt:
          type: string
          format: date-time
          description: ISO string when the merchant account was updated.
          example: "2023-10-26T21:28:34.152Z"
    PaymentLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for this payment link.
          example: "67d7ae28-bf1d-4ee9-8a47-99358c9e6c32"
        status:
          type: string
          enum: ["pending", "processing", "approved", "cancelled"]
          description: Current status of the payment link.
          example: "approved"
        customerId:
          type: string
          description: Reference to the customer who owns this payment link.
          example: "e79a0b74-3aba-4149-9f74-0bb5791a6ee6"
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        paymentType:
          type: string
          enum: ["pse"]
          description: Type of the payment.
          example: "pse"
        amount:
          type: number
          description: Amount to be paid through the payment link.
        redirectUrl:
          type: string
          description: URL to redirect the user after payment is processed.
        expiration:
          type: string
          format: date-time
          description: Expiration time of the payment link.
        charges:
          type: array
          items:
            $ref: "#/components/schemas/Charge"
        createdAt:
          type: string
          format: date-time
          description: ISO string when the payment link was created.
          example: "2023-10-26T21:28:34.152Z"
        updatedAt:
          type: string
          format: date-time
          description: ISO string when the payment link was last updated.
          example: "2023-10-26T21:28:34.152Z"
    Charge:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for this charge.
          example: "67d7ae28-bf1d-4ee9-8a47-99358c9e6c32"
        status:
          type: string
          enum: ["approved", "declined"]
          description: Status of the charge.
          example: "approved"
        statusMessage:
          type: string
          description: Message describing the status of the charge.
        paymentType:
          type: string
          enum: ["pse"]
          description: Type of the payment for the charge.
          example: "pse"
        amount:
          type: number
          description: Amount of the charge.
        createdAt:
          type: string
          format: date-time
          description: ISO string when the charge was created.
          example: "2023-10-26T21:28:34.152Z"
        updatedAt:
          type: string
          format: date-time
          description: ISO string when the charge was last updated.
          example: "2023-10-26T21:28:34.152Z"
    PayoutTarget:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for this payout target.
          example: "67d7ae28-bf1d-4ee9-8a47-99358c9e6c32"
        status:
          type: string
          enum: ["pending", "active", "cancelled"]
          description: Status of the payout target.
          example: "active"
        statusMessage:
          type: string
          description: Further detail on the status of the payout target.
        customerId:
          type: string
          description: Reference to the customer who owns this payout target.
          example: "e79a0b74-3aba-4149-9f74-0bb5791a6ee6"
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        type:
          type: string
          enum: ["bankAccount"]
          description: Type of the payout target.
          example: "bankAccount"
        bankAccount:
          $ref: "#/components/schemas/BankAccount"
        createdAt:
          type: string
          format: date-time
          description: ISO string when the payout target was created.
          example: "2023-10-26T21:28:34.152Z"
        updatedAt:
          type: string
          format: date-time
          description: ISO string when the payout target was last updated.
          example: "2023-10-26T21:28:34.152Z"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
